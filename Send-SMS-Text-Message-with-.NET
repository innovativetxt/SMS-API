try
        {
            // InnovativeTXT POST URL
            string url = "http://rest.innovativetxt.com/smsapi/index.php";
            // XML-formatted data
            string toSender = "447879854566";
            string fromSender = "CompanyName";
            string textMessage = "Thanks for Choosing Innovative Text.";

            string fields = "?to=" + toSender + "&from=" + fromSender
+ "&text=" + textMessage + "&api_key=KEY&api_secret=API SECRET";
            url = url + fields;
            // web request start
            Uri uri = new Uri(url);
            string data = "field-keywords=ASP.NET 2.0";
            if (uri.Scheme == Uri.UriSchemeHttp)
            {
                // create a request on behalf of uri
                HttpWebRequest request =
(HttpWebRequest)HttpWebRequest.Create(uri);
                // setting parameter for the request
                request.Method = WebRequestMethods.Http.Post;
                request.ContentLength = data.Length;
                request.ContentType = "application/x-www-form-urlencoded";
                // a stream writer for the request
                StreamWriter writer = new
StreamWriter(request.GetRequestStream());
                // write down the date
                writer.Write(data);
                //close the stream writer
                writer.Close();

                // getting response from the request
                HttpWebResponse response =
(HttpWebResponse)request.GetResponse();

                // Get the stream associated with the response.
                Stream receiveStream = response.GetResponseStream();

                // Pipes the stream to a higher level stream reader
with the required encoding format.
                StreamReader readStream = new
StreamReader(receiveStream, System.Text.Encoding.UTF8);

                // to write a http response from the characters
                Response.Write(readStream.ReadToEnd());
                // close the response
                response.Close();
                // close the reader
                readStream.Close();

            }
        }
        catch (Exception exp)
        {
            // catch for unhelded exception
            Response.Write(exp.Message);
        }
            
            
            
            For More details visit http://www.innovativetxt.com/services/sms_api_gateway.htm
